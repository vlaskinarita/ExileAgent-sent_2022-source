using System;
using System.Runtime.CompilerServices;

namespace NaCl.Internal
{
	internal static class Salsa20
	{
		[NullableContext(1)]
		public static void Transform(byte[] output, byte[] input, byte[] k, byte[] c)
		{
			uint num = 1634760805U;
			uint num2 = 1634760805U;
			uint num3 = num;
			uint num4 = 857760878U;
			uint num5 = 857760878U;
			uint num6 = num4;
			uint num7 = 2036477234U;
			uint num8 = 2036477234U;
			uint num9 = num7;
			uint num10 = 1797285236U;
			uint num11 = 1797285236U;
			uint num12 = num10;
			if (c != null)
			{
				num2 = (num3 = Common.Load32(c, 0));
				num5 = (num6 = Common.Load32(c, 4));
				num8 = (num9 = Common.Load32(c, 8));
				num11 = (num12 = Common.Load32(c, 12));
			}
			uint num14;
			uint num13 = num14 = Common.Load32(k, 0);
			uint num16;
			uint num15 = num16 = Common.Load32(k, 4);
			uint num18;
			uint num17 = num18 = Common.Load32(k, 8);
			uint num20;
			uint num19 = num20 = Common.Load32(k, 12);
			uint num22;
			uint num21 = num22 = Common.Load32(k, 16);
			uint num24;
			uint num23 = num24 = Common.Load32(k, 20);
			uint num26;
			uint num25 = num26 = Common.Load32(k, 24);
			uint num28;
			uint num27 = num28 = Common.Load32(k, 28);
			uint num30;
			uint num29 = num30 = Common.Load32(input, 0);
			uint num32;
			uint num31 = num32 = Common.Load32(input, 4);
			uint num34;
			uint num33 = num34 = Common.Load32(input, 8);
			uint num36;
			uint num35 = num36 = Common.Load32(input, 12);
			for (int i = 0; i < 20; i += 2)
			{
				uint num37 = num19;
				uint num38 = num2 + num23;
				int num39 = 7;
				num19 = (num37 ^ Common.RotateLeft(num38, num39));
				uint num40 = num33;
				num38 = num19 + num2;
				num39 = 9;
				num33 = (num40 ^ Common.RotateLeft(num38, num39));
				uint num41 = num23;
				num38 = num33 + num19;
				num39 = 13;
				num23 = (num41 ^ Common.RotateLeft(num38, num39));
				uint num42 = num2;
				num38 = num23 + num33;
				num39 = 18;
				num2 = (num42 ^ Common.RotateLeft(num38, num39));
				uint num43 = num35;
				num38 = num5 + num13;
				num39 = 7;
				num35 = (num43 ^ Common.RotateLeft(num38, num39));
				uint num44 = num25;
				num38 = num35 + num5;
				num39 = 9;
				num25 = (num44 ^ Common.RotateLeft(num38, num39));
				uint num45 = num13;
				num38 = num25 + num35;
				num39 = 13;
				num13 = (num45 ^ Common.RotateLeft(num38, num39));
				uint num46 = num5;
				num38 = num13 + num25;
				num39 = 18;
				num5 = (num46 ^ Common.RotateLeft(num38, num39));
				uint num47 = num27;
				num38 = num8 + num29;
				num39 = 7;
				num27 = (num47 ^ Common.RotateLeft(num38, num39));
				uint num48 = num15;
				num38 = num27 + num8;
				num39 = 9;
				num15 = (num48 ^ Common.RotateLeft(num38, num39));
				uint num49 = num29;
				num38 = num15 + num27;
				num39 = 13;
				num29 = (num49 ^ Common.RotateLeft(num38, num39));
				uint num50 = num8;
				num38 = num29 + num15;
				num39 = 18;
				num8 = (num50 ^ Common.RotateLeft(num38, num39));
				uint num51 = num17;
				num38 = num11 + num21;
				num39 = 7;
				num17 = (num51 ^ Common.RotateLeft(num38, num39));
				uint num52 = num31;
				num38 = num17 + num11;
				num39 = 9;
				num31 = (num52 ^ Common.RotateLeft(num38, num39));
				uint num53 = num21;
				num38 = num31 + num17;
				num39 = 13;
				num21 = (num53 ^ Common.RotateLeft(num38, num39));
				uint num54 = num11;
				num38 = num21 + num31;
				num39 = 18;
				num11 = (num54 ^ Common.RotateLeft(num38, num39));
				uint num55 = num13;
				num38 = num2 + num17;
				num39 = 7;
				num13 = (num55 ^ Common.RotateLeft(num38, num39));
				uint num56 = num15;
				num38 = num13 + num2;
				num39 = 9;
				num15 = (num56 ^ Common.RotateLeft(num38, num39));
				uint num57 = num17;
				num38 = num15 + num13;
				num39 = 13;
				num17 = (num57 ^ Common.RotateLeft(num38, num39));
				uint num58 = num2;
				num38 = num17 + num15;
				num39 = 18;
				num2 = (num58 ^ Common.RotateLeft(num38, num39));
				uint num59 = num29;
				num38 = num5 + num19;
				num39 = 7;
				num29 = (num59 ^ Common.RotateLeft(num38, num39));
				uint num60 = num31;
				num38 = num29 + num5;
				num39 = 9;
				num31 = (num60 ^ Common.RotateLeft(num38, num39));
				uint num61 = num19;
				num38 = num31 + num29;
				num39 = 13;
				num19 = (num61 ^ Common.RotateLeft(num38, num39));
				uint num62 = num5;
				num38 = num19 + num31;
				num39 = 18;
				num5 = (num62 ^ Common.RotateLeft(num38, num39));
				uint num63 = num21;
				num38 = num8 + num35;
				num39 = 7;
				num21 = (num63 ^ Common.RotateLeft(num38, num39));
				uint num64 = num33;
				num38 = num21 + num8;
				num39 = 9;
				num33 = (num64 ^ Common.RotateLeft(num38, num39));
				uint num65 = num35;
				num38 = num33 + num21;
				num39 = 13;
				num35 = (num65 ^ Common.RotateLeft(num38, num39));
				uint num66 = num8;
				num38 = num35 + num33;
				num39 = 18;
				num8 = (num66 ^ Common.RotateLeft(num38, num39));
				uint num67 = num23;
				num38 = num11 + num27;
				num39 = 7;
				num23 = (num67 ^ Common.RotateLeft(num38, num39));
				uint num68 = num25;
				num38 = num23 + num11;
				num39 = 9;
				num25 = (num68 ^ Common.RotateLeft(num38, num39));
				uint num69 = num27;
				num38 = num25 + num23;
				num39 = 13;
				num27 = (num69 ^ Common.RotateLeft(num38, num39));
				uint num70 = num11;
				num38 = num27 + num25;
				num39 = 18;
				num11 = (num70 ^ Common.RotateLeft(num38, num39));
			}
			Common.Store(output, 0, num2 + num3);
			Common.Store(output, 4, num13 + num14);
			Common.Store(output, 8, num15 + num16);
			Common.Store(output, 12, num17 + num18);
			Common.Store(output, 16, num19 + num20);
			Common.Store(output, 20, num5 + num6);
			Common.Store(output, 24, num29 + num30);
			Common.Store(output, 28, num31 + num32);
			Common.Store(output, 32, num33 + num34);
			Common.Store(output, 36, num35 + num36);
			Common.Store(output, 40, num8 + num9);
			Common.Store(output, 44, num21 + num22);
			Common.Store(output, 48, num23 + num24);
			Common.Store(output, 52, num25 + num26);
			Common.Store(output, 56, num27 + num28);
			Common.Store(output, 60, num11 + num12);
		}

		public static void Transform(Span<byte> output, ReadOnlySpan<byte> input, ReadOnlySpan<byte> k, ReadOnlySpan<byte> c)
		{
			uint num = 1634760805U;
			uint num2 = 1634760805U;
			uint num3 = num;
			uint num4 = 857760878U;
			uint num5 = 857760878U;
			uint num6 = num4;
			uint num7 = 2036477234U;
			uint num8 = 2036477234U;
			uint num9 = num7;
			uint num10 = 1797285236U;
			uint num11 = 1797285236U;
			uint num12 = num10;
			if (!c.IsEmpty)
			{
				num2 = (num3 = Common.Load32(c, 0));
				num5 = (num6 = Common.Load32(c, 4));
				num8 = (num9 = Common.Load32(c, 8));
				num11 = (num12 = Common.Load32(c, 12));
			}
			uint num14;
			uint num13 = num14 = Common.Load32(k, 0);
			uint num16;
			uint num15 = num16 = Common.Load32(k, 4);
			uint num18;
			uint num17 = num18 = Common.Load32(k, 8);
			uint num20;
			uint num19 = num20 = Common.Load32(k, 12);
			uint num22;
			uint num21 = num22 = Common.Load32(k, 16);
			uint num24;
			uint num23 = num24 = Common.Load32(k, 20);
			uint num26;
			uint num25 = num26 = Common.Load32(k, 24);
			uint num28;
			uint num27 = num28 = Common.Load32(k, 28);
			uint num30;
			uint num29 = num30 = Common.Load32(input, 0);
			uint num32;
			uint num31 = num32 = Common.Load32(input, 4);
			uint num34;
			uint num33 = num34 = Common.Load32(input, 8);
			uint num36;
			uint num35 = num36 = Common.Load32(input, 12);
			for (int i = 0; i < 20; i += 2)
			{
				uint num37 = num19;
				uint num38 = num2 + num23;
				int num39 = 7;
				num19 = (num37 ^ Common.RotateLeft(num38, num39));
				uint num40 = num33;
				num38 = num19 + num2;
				num39 = 9;
				num33 = (num40 ^ Common.RotateLeft(num38, num39));
				uint num41 = num23;
				num38 = num33 + num19;
				num39 = 13;
				num23 = (num41 ^ Common.RotateLeft(num38, num39));
				uint num42 = num2;
				num38 = num23 + num33;
				num39 = 18;
				num2 = (num42 ^ Common.RotateLeft(num38, num39));
				uint num43 = num35;
				num38 = num5 + num13;
				num39 = 7;
				num35 = (num43 ^ Common.RotateLeft(num38, num39));
				uint num44 = num25;
				num38 = num35 + num5;
				num39 = 9;
				num25 = (num44 ^ Common.RotateLeft(num38, num39));
				uint num45 = num13;
				num38 = num25 + num35;
				num39 = 13;
				num13 = (num45 ^ Common.RotateLeft(num38, num39));
				uint num46 = num5;
				num38 = num13 + num25;
				num39 = 18;
				num5 = (num46 ^ Common.RotateLeft(num38, num39));
				uint num47 = num27;
				num38 = num8 + num29;
				num39 = 7;
				num27 = (num47 ^ Common.RotateLeft(num38, num39));
				uint num48 = num15;
				num38 = num27 + num8;
				num39 = 9;
				num15 = (num48 ^ Common.RotateLeft(num38, num39));
				uint num49 = num29;
				num38 = num15 + num27;
				num39 = 13;
				num29 = (num49 ^ Common.RotateLeft(num38, num39));
				uint num50 = num8;
				num38 = num29 + num15;
				num39 = 18;
				num8 = (num50 ^ Common.RotateLeft(num38, num39));
				uint num51 = num17;
				num38 = num11 + num21;
				num39 = 7;
				num17 = (num51 ^ Common.RotateLeft(num38, num39));
				uint num52 = num31;
				num38 = num17 + num11;
				num39 = 9;
				num31 = (num52 ^ Common.RotateLeft(num38, num39));
				uint num53 = num21;
				num38 = num31 + num17;
				num39 = 13;
				num21 = (num53 ^ Common.RotateLeft(num38, num39));
				uint num54 = num11;
				num38 = num21 + num31;
				num39 = 18;
				num11 = (num54 ^ Common.RotateLeft(num38, num39));
				uint num55 = num13;
				num38 = num2 + num17;
				num39 = 7;
				num13 = (num55 ^ Common.RotateLeft(num38, num39));
				uint num56 = num15;
				num38 = num13 + num2;
				num39 = 9;
				num15 = (num56 ^ Common.RotateLeft(num38, num39));
				uint num57 = num17;
				num38 = num15 + num13;
				num39 = 13;
				num17 = (num57 ^ Common.RotateLeft(num38, num39));
				uint num58 = num2;
				num38 = num17 + num15;
				num39 = 18;
				num2 = (num58 ^ Common.RotateLeft(num38, num39));
				uint num59 = num29;
				num38 = num5 + num19;
				num39 = 7;
				num29 = (num59 ^ Common.RotateLeft(num38, num39));
				uint num60 = num31;
				num38 = num29 + num5;
				num39 = 9;
				num31 = (num60 ^ Common.RotateLeft(num38, num39));
				uint num61 = num19;
				num38 = num31 + num29;
				num39 = 13;
				num19 = (num61 ^ Common.RotateLeft(num38, num39));
				uint num62 = num5;
				num38 = num19 + num31;
				num39 = 18;
				num5 = (num62 ^ Common.RotateLeft(num38, num39));
				uint num63 = num21;
				num38 = num8 + num35;
				num39 = 7;
				num21 = (num63 ^ Common.RotateLeft(num38, num39));
				uint num64 = num33;
				num38 = num21 + num8;
				num39 = 9;
				num33 = (num64 ^ Common.RotateLeft(num38, num39));
				uint num65 = num35;
				num38 = num33 + num21;
				num39 = 13;
				num35 = (num65 ^ Common.RotateLeft(num38, num39));
				uint num66 = num8;
				num38 = num35 + num33;
				num39 = 18;
				num8 = (num66 ^ Common.RotateLeft(num38, num39));
				uint num67 = num23;
				num38 = num11 + num27;
				num39 = 7;
				num23 = (num67 ^ Common.RotateLeft(num38, num39));
				uint num68 = num25;
				num38 = num23 + num11;
				num39 = 9;
				num25 = (num68 ^ Common.RotateLeft(num38, num39));
				uint num69 = num27;
				num38 = num25 + num23;
				num39 = 13;
				num27 = (num69 ^ Common.RotateLeft(num38, num39));
				uint num70 = num11;
				num38 = num27 + num25;
				num39 = 18;
				num11 = (num70 ^ Common.RotateLeft(num38, num39));
			}
			Common.Store(output, 0, num2 + num3);
			Common.Store(output, 4, num13 + num14);
			Common.Store(output, 8, num15 + num16);
			Common.Store(output, 12, num17 + num18);
			Common.Store(output, 16, num19 + num20);
			Common.Store(output, 20, num5 + num6);
			Common.Store(output, 24, num29 + num30);
			Common.Store(output, 28, num31 + num32);
			Common.Store(output, 32, num33 + num34);
			Common.Store(output, 36, num35 + num36);
			Common.Store(output, 40, num8 + num9);
			Common.Store(output, 44, num21 + num22);
			Common.Store(output, 48, num23 + num24);
			Common.Store(output, 52, num25 + num26);
			Common.Store(output, 56, num27 + num28);
			Common.Store(output, 60, num11 + num12);
		}

		private const int Rounds = 20;

		public const int KeyLength = 32;
	}
}
